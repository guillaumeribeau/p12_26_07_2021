{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\n\nfunction useFetch(url) {\n  _s();\n\n  const [state, setState] = useState({\n    items: [],\n    loading: true\n  });\n  useEffect(function () {\n    (async function () {\n      const response = await fetch(url);\n      const responseData = await response.json();\n\n      if (response.ok) {\n        setState({\n          items: responseData,\n          loading: false\n        });\n      } else {\n        alert(JSON.stingify(responseData));\n        setState({\n          items: [],\n          loading: false\n        });\n      }\n    })();\n  }, [items]);\n  return [state.loading, state.items];\n}\n\n_s(useFetch, \"lNKZEP5zq1a3xtAjlQ4df73Mk4A=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/guillaume/desktop-tutorial/p12_26_07_2021/src/components/FetchDating.jsx"],"names":["React","useState","useEffect","useFetch","url","state","setState","items","loading","response","fetch","responseData","json","ok","alert","JSON","stingify"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAGA,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC;AACjCM,IAAAA,KAAK,EAAE,EAD0B;AAEjCC,IAAAA,OAAO,EAAE;AAFwB,GAAD,CAAlC;AAKAN,EAAAA,SAAS,CAAC,YAAY;AACpB,KAAC,kBAAkB;AACjB,YAAMO,QAAQ,GAAG,MAAMC,KAAK,CAACN,GAAD,CAA5B;AACA,YAAMO,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;;AACA,UAAIH,QAAQ,CAACI,EAAb,EAAiB;AACfP,QAAAA,QAAQ,CAAC;AACPC,UAAAA,KAAK,EAAEI,YADA;AAEPH,UAAAA,OAAO,EAAE;AAFF,SAAD,CAAR;AAID,OALD,MAKO;AACLM,QAAAA,KAAK,CAACC,IAAI,CAACC,QAAL,CAAcL,YAAd,CAAD,CAAL;AACAL,QAAAA,QAAQ,CAAC;AACPC,UAAAA,KAAK,EAAE,EADA;AAEPC,UAAAA,OAAO,EAAE;AAFF,SAAD,CAAR;AAID;AACF,KAfD;AAgBD,GAjBQ,EAiBN,CAACD,KAAD,CAjBM,CAAT;AAmBA,SAAO,CAACF,KAAK,CAACG,OAAP,EAAgBH,KAAK,CAACE,KAAtB,CAAP;AACD;;GA1BQJ,Q;;AA4BT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\n\nfunction useFetch(url) {\n  const [state, setState] = useState({\n    items: [],\n    loading: true,\n  });\n\n  useEffect(function () {\n    (async function () {\n      const response = await fetch(url);\n      const responseData = await response.json();\n      if (response.ok) {\n        setState({\n          items: responseData,\n          loading: false,\n        });\n      } else {\n        alert(JSON.stingify(responseData));\n        setState({\n          items: [],\n          loading: false,\n        });\n      }\n    })();\n  }, [items]);\n\n  return [state.loading, state.items];\n}\n\nexport default useFetch"]},"metadata":{},"sourceType":"module"}