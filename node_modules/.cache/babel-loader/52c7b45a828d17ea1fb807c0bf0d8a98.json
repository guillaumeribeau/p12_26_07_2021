{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction useFetch(url) {\n  _s();\n\n  const [state, setState] = useState({\n    items: [],\n    loading: true\n  });\n  useEffect(function () {\n    (async function () {\n      const response = await fetch(url);\n      const responseData = await response.json();\n\n      if (response.ok) {\n        setState({\n          items: responseData,\n          loading: false\n        });\n      } else {\n        alert(json.stingify(responseData));\n        setState({\n          items: [],\n          loading: false\n        });\n      }\n    })();\n  }, []);\n  return [state.loading, state.items];\n}\n\n_s(useFetch, \"GzIk/S9hMylz9b3fsAwU5FKokFI=\");","map":{"version":3,"sources":["/Users/guillaume/desktop-tutorial/p12_26_07_2021/src/components/FetchDating.jsx"],"names":["React","useState","useEffect","axios","useFetch","url","state","setState","items","loading","response","fetch","responseData","json","ok","alert","stingify"],"mappings":";;AACA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAIA,SAASC,QAAT,CAAkBC,GAAlB,EAAsB;AAAA;;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC;AACnCO,IAAAA,KAAK,EAAE,EAD4B;AAEnCC,IAAAA,OAAO,EAAE;AAF0B,GAAD,CAAlC;AAMAP,EAAAA,SAAS,CAAC,YAAU;AACpB,KAAC,kBAAgB;AACjB,YAAMQ,QAAQ,GAAE,MAAMC,KAAK,CAACN,GAAD,CAA3B;AACA,YAAMO,YAAY,GAAE,MAAMF,QAAQ,CAACG,IAAT,EAA1B;;AACA,UAAGH,QAAQ,CAACI,EAAZ,EAAe;AACfP,QAAAA,QAAQ,CAAE;AACNC,UAAAA,KAAK,EAAEI,YADD;AAENH,UAAAA,OAAO,EAAE;AAFH,SAAF,CAAR;AAIC,OALD,MAKK;AACDM,QAAAA,KAAK,CAACF,IAAI,CAACG,QAAL,CAAcJ,YAAd,CAAD,CAAL;AACAL,QAAAA,QAAQ,CAAC;AACbC,UAAAA,KAAK,EAAC,EADO;AAEbC,UAAAA,OAAO,EAAE;AAFI,SAAD,CAAR;AAIH;AACA,KAfD;AAgBC,GAjBQ,EAiBN,EAjBM,CAAT;AA0BI,SAAO,CACHH,KAAK,CAACG,OADH,EAEJH,KAAK,CAACE,KAFF,CAAP;AAIH;;GArCQJ,Q","sourcesContent":["\nimport React,{useState,useEffect} from 'react'\nimport axios from 'axios';\n\n\n\nfunction useFetch(url){\nconst [state, setState] = useState({\nitems: [],\nloading: true\n\n})\n\nuseEffect(function(){\n(async function(){\nconst response= await fetch(url)\nconst responseData= await response.json()\nif(response.ok){\nsetState ({\n    items: responseData,\n    loading: false\n})\n}else{\n    alert(json.stingify(responseData))\n    setState({\nitems:[],\nloading: false\n    })\n}\n})()\n}, [])\n\n\n\n\n\n\n\n\n    return [\n        state.loading,\n       state.items\n    ]\n}"]},"metadata":{},"sourceType":"module"}