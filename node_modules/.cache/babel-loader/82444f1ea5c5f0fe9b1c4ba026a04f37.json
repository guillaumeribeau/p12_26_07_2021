{"ast":null,"code":"var _jsxFileName = \"/Users/guillaume/desktop-tutorial/p12_26_07_2021/src/components/AverageSessions.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { LineChart, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Line, ResponsiveContainer } from \"recharts\";\nimport useFetch from \"./FetchDating\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport TooltipsAverage from \"./TooltipsAverage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sessions = [{\n  day: 1,\n  sessionLength: 30\n}, {\n  day: 2,\n  sessionLength: 23\n}, {\n  day: 3,\n  sessionLength: 45\n}, {\n  day: 4,\n  sessionLength: 50\n}, {\n  day: 5,\n  sessionLength: 0\n}, {\n  day: 6,\n  sessionLength: 0\n}, {\n  day: 7,\n  sessionLength: 60\n}];\n\nconst transformAxisX = data => {\n  let value = \"\";\n\n  switch (data.day) {\n    case 1:\n      value = \"L\";\n      break;\n\n    case 2:\n      value = \"M\";\n      break;\n\n    case 3:\n      value = \"M\";\n      break;\n\n    case 4:\n      value = \"J\";\n      break;\n\n    case 5:\n      value = \"V\";\n      break;\n\n    case 6:\n      value = \"S\";\n      break;\n\n    case 7:\n      value = \"D\";\n      break;\n\n    default:\n      value = \"\";\n  }\n\n  return value;\n};\n\nconst AverageSessions = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [loading, averageData] = useFetch(`http://localhost:3000/user/${id}/average-sessions`);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }, this);\n  }\n\n  let sessionArray = [];\n  let minY = 0;\n  let maxY = 0;\n\n  if (averageData) {\n    sessionArray = averageData.data.sessions.map(elt => elt.sessionLength);\n    minY = Math.min(...sessionArray) / 2;\n    maxY = Math.max(...sessionArray) * 2;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"average_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Dur\\xE9e moyenne des \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 27\n      }, this), \"sessions\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"80%\",\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        width: 258,\n        height: 263,\n        data: averageData.data.sessions,\n        margin: {\n          top: 5,\n          right: 15,\n          left: 15,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          horizontal: false,\n          vertical: false,\n          strokeDasharray: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: transformAxisX,\n          stroke: \"rgba(255, 255, 255, 0.5)\",\n          tickLine: false,\n          axisLine: false,\n          tick: {\n            fontSize: 12\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          hide: true,\n          domain: [minY, maxY]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          content: /*#__PURE__*/_jsxDEV(TooltipsAverage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 29\n          }, this),\n          cursor: {\n            fill: \"#FFFFFF\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"sessionLength\",\n          stroke: \"#fff\",\n          strokeWidth: 2,\n          dot: false,\n          activeDot: {\n            stroke: \"rgba(255, 255, 255, 0.2)\",\n            strokeWidth: 10,\n            r: 5\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AverageSessions, \"W5nGA4QyAF3ZWm+TVhYSR8pinWI=\", false, function () {\n  return [useParams, useFetch];\n});\n\n_c = AverageSessions;\nexport default AverageSessions;\n\nvar _c;\n\n$RefreshReg$(_c, \"AverageSessions\");","map":{"version":3,"sources":["/Users/guillaume/desktop-tutorial/p12_26_07_2021/src/components/AverageSessions.jsx"],"names":["React","LineChart","CartesianGrid","XAxis","YAxis","Tooltip","Legend","Line","ResponsiveContainer","useFetch","useLocation","useParams","TooltipsAverage","sessions","day","sessionLength","transformAxisX","data","value","AverageSessions","id","loading","averageData","sessionArray","minY","maxY","map","elt","Math","min","max","top","right","left","bottom","fontSize","fill","stroke","strokeWidth","r"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  LineChart,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  Line,\n  ResponsiveContainer,\n  } from \"recharts\";\nimport useFetch from \"./FetchDating\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport TooltipsAverage from \"./TooltipsAverage\";\n\nconst sessions = [\n  {\n    day: 1,\n    sessionLength: 30,\n  },\n  {\n    day: 2,\n    sessionLength: 23,\n  },\n  {\n    day: 3,\n    sessionLength: 45,\n  },\n  {\n    day: 4,\n    sessionLength: 50,\n  },\n  {\n    day: 5,\n    sessionLength: 0,\n  },\n  {\n    day: 6,\n    sessionLength: 0,\n  },\n  {\n    day: 7,\n    sessionLength: 60,\n  },\n];\nconst transformAxisX = (data) => {\n  let value = \"\";\n  switch (data.day) {\n    case 1:\n      value = \"L\";\n      break;\n    case 2:\n      value = \"M\";\n      break;\n    case 3:\n      value = \"M\";\n      break;\n    case 4:\n      value = \"J\";\n      break;\n    case 5:\n      value = \"V\";\n      break;\n    case 6:\n      value = \"S\";\n      break;\n    case 7:\n      value = \"D\";\n      break;\n    default:\n      value = \"\";\n  }\n  return value;\n};\n\nconst AverageSessions = () => {\n  const { id } = useParams();\n  const [loading, averageData] = useFetch(\n    `http://localhost:3000/user/${id}/average-sessions`\n  );\n\n  if (loading) {\n    return <div className></div>;\n  }\n\n  let sessionArray = [];\n  let minY = 0;\n  let maxY = 0;\n\n  if (averageData) {\n    sessionArray = averageData.data.sessions.map((elt) => elt.sessionLength);\n    minY = Math.min(...sessionArray) / 2;\n    maxY = Math.max(...sessionArray) * 2;\n  }\n  return (\n    <div className=\"average_container\">\n      <h2>\n        Durée moyenne des <br />\n        sessions\n      </h2>\n      <ResponsiveContainer width=\"100%\" height=\"80%\">\n        <LineChart\n          width={258}\n          height={263}\n          data={averageData.data.sessions}\n          margin={{ top: 5, right: 15, left: 15, bottom: 5 }}\n        >\n          <CartesianGrid\n            horizontal={false}\n            vertical={false}\n            strokeDasharray=\"0\"\n          />\n          <XAxis\n            dataKey={transformAxisX}\n            stroke=\"rgba(255, 255, 255, 0.5)\"\n            tickLine={false}\n            axisLine={false}\n            tick={{ fontSize: 12 }}\n            \n           \n          />\n          <YAxis hide={true} domain={[minY, maxY]} />\n          <Tooltip content={<TooltipsAverage />} cursor={{ fill: \"#FFFFFF\" }} />\n          <Line\n            type=\"monotone\"\n            dataKey=\"sessionLength\"\n            stroke=\"#fff\"\n            strokeWidth={2}\n            dot={false}\n            activeDot={{\n              stroke: \"rgba(255, 255, 255, 0.2)\",\n              strokeWidth: 10,\n              r: 5,\n            }}\n          />\n     \n          \n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default AverageSessions;\n"]},"metadata":{},"sourceType":"module"}