{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\n/**\n * Hooks for fetch data\n * @param   {string}  url the backend url for data access\n * @return  {string}  The state\n */\n\nfunction useFetch(url) {\n  _s();\n\n  const [state, setState] = useState({\n    items: [],\n    loading: true\n  });\n  useEffect(function () {\n    (async function () {\n      const response = await fetch(url);\n      const responseData = await response.json();\n\n      if (response.ok) {\n        setState({\n          items: responseData,\n          loading: false\n        });\n      } else {\n        alert(JSON.stingify(responseData));\n        setState({\n          items: [],\n          loading: false\n        });\n      }\n    })();\n  }, [url]);\n\n  if (state.loading) {\n    return 'chargement...';\n  } else {\n    return [state.loading, state.items];\n  }\n}\n\n_s(useFetch, \"lNKZEP5zq1a3xtAjlQ4df73Mk4A=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/guillaume/desktop-tutorial/p12_26_07_2021/src/components/FetchDating.jsx"],"names":["React","useState","useEffect","useFetch","url","state","setState","items","loading","response","fetch","responseData","json","ok","alert","JSON","stingify"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA;AACA;AACA;AACA;AACA;;AAEA,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC;AACjCM,IAAAA,KAAK,EAAE,EAD0B;AAEjCC,IAAAA,OAAO,EAAE;AAFwB,GAAD,CAAlC;AAKAN,EAAAA,SAAS,CACP,YAAY;AACV,KAAC,kBAAkB;AACjB,YAAMO,QAAQ,GAAG,MAAMC,KAAK,CAACN,GAAD,CAA5B;AACA,YAAMO,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;;AACA,UAAIH,QAAQ,CAACI,EAAb,EAAiB;AACfP,QAAAA,QAAQ,CAAC;AACPC,UAAAA,KAAK,EAAEI,YADA;AAEPH,UAAAA,OAAO,EAAE;AAFF,SAAD,CAAR;AAID,OALD,MAKO;AACLM,QAAAA,KAAK,CAACC,IAAI,CAACC,QAAL,CAAcL,YAAd,CAAD,CAAL;AACAL,QAAAA,QAAQ,CAAC;AACPC,UAAAA,KAAK,EAAE,EADA;AAEPC,UAAAA,OAAO,EAAE;AAFF,SAAD,CAAR;AAID;AACF,KAfD;AAgBD,GAlBM,EAmBP,CAACJ,GAAD,CAnBO,CAAT;;AAsBA,MAAGC,KAAK,CAACG,OAAT,EAAiB;AACf,WAAO,eAAP;AACD,GAFD,MAII;AACN,WAAO,CAACH,KAAK,CAACG,OAAP,EAAgBH,KAAK,CAACE,KAAtB,CAAP;AAEG;AAEF;;GArCQJ,Q;;AAuCT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\n/**\n * Hooks for fetch data\n * @param   {string}  url the backend url for data access\n * @return  {string}  The state\n */\n\nfunction useFetch(url) {\n  const [state, setState] = useState({\n    items: [],\n    loading: true,\n  });\n\n  useEffect(\n    function () {\n      (async function () {\n        const response = await fetch(url);\n        const responseData = await response.json();\n        if (response.ok) {\n          setState({\n            items: responseData,\n            loading: false,\n          });\n        } else {\n          alert(JSON.stingify(responseData));\n          setState({\n            items: [],\n            loading: false,\n          });\n        }\n      })();\n    },\n    [url]\n  );\n   \n  if(state.loading){\n    return 'chargement...'\n  }\n\n  else{\nreturn [state.loading, state.items];\n\n  }\n  \n}\n\nexport default useFetch;\n"]},"metadata":{},"sourceType":"module"}