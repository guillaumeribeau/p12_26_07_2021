{"ast":null,"code":"var _jsxFileName = \"/Users/guillaume/desktop-tutorial/p12_26_07_2021/src/components/DayliesActivity.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Bar, ResponsiveContainer, Area } from 'recharts';\nimport useFetch from './FetchDating';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DayliesActivity = () => {\n  _s();\n\n  const [loading, items] = useFetch('http://localhost:3000/user/12/activity');\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n\n  console.log(items);\n  let kilogramsArray = [];\n  let caloriesArray = [];\n  let minYKilo = 0;\n  let maxYKilo = 0;\n  let minYCal = 0;\n  let maxYCal = 0;\n\n  if (items) {\n    kilogramsArray = sessions.map(elt => elt.kilogram);\n    minYKilo = Math.min(...kilogramsArray) - 1;\n    maxYKilo = Math.max(...kilogramsArray) + 1;\n    caloriesArray = sessions.map(elt => elt.calories);\n    minYCal = Math.min(...caloriesArray) - 10;\n    maxYCal = Math.max(...caloriesArray) + 10;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"daylies_activities\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"units\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Activit\\xE9 quotidienne\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-elt\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"round_poids\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Poids (kg)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-elt\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"round_calorie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Calories br\\xFBl\\xE9es (kCal)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"90%\",\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        barSize: 7,\n        barGap: 8,\n        barCategoryGap: 54,\n        radius: 5,\n        data: items.data.sessions,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          vertical: \"false\",\n          BackGround: \"#F2F2F2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          orientation: \"right\",\n          dataKey: \"kilogram\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"calories\",\n          fill: \"#282D30\",\n          radius: [5, 5, 0, 0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"kilogram\",\n          fill: \"#E60000\",\n          radius: [5, 5, 0, 0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DayliesActivity, \"MEooJrOzjGxW4T9MIqV/AMmwx/A=\", false, function () {\n  return [useFetch];\n});\n\n_c = DayliesActivity;\nexport default DayliesActivity;\n\nvar _c;\n\n$RefreshReg$(_c, \"DayliesActivity\");","map":{"version":3,"sources":["/Users/guillaume/desktop-tutorial/p12_26_07_2021/src/components/DayliesActivity.jsx"],"names":["React","BarChart","CartesianGrid","XAxis","YAxis","Tooltip","Legend","Bar","ResponsiveContainer","Area","useFetch","DayliesActivity","loading","items","console","log","kilogramsArray","caloriesArray","minYKilo","maxYKilo","minYCal","maxYCal","sessions","map","elt","kilogram","Math","min","max","calories","data"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport {BarChart, CartesianGrid,XAxis,YAxis,Tooltip,Legend,Bar, ResponsiveContainer, Area} from 'recharts'\nimport useFetch from './FetchDating'\n\n\nconst DayliesActivity = () => {\n\n\nconst [loading, items]= useFetch('http://localhost:3000/user/12/activity')\n\n\nif (loading){\n    return <div>Chargement...</div>\n}\nconsole.log(items)\n\nlet kilogramsArray = [];\n    let caloriesArray = [];\n    let minYKilo = 0;\n    let maxYKilo = 0;\n    let minYCal = 0;\n    let maxYCal = 0;\n\n    if (items) {\n        kilogramsArray = sessions.map((elt) => elt.kilogram);\n        minYKilo = Math.min(...kilogramsArray) - 1;\n        maxYKilo = Math.max(...kilogramsArray) + 1;\n  \n        caloriesArray = sessions.map((elt) => elt.calories);\n        minYCal = Math.min(...caloriesArray) - 10;\n        maxYCal = Math.max(...caloriesArray) + 10;\n      }\n\n\n    return (\n        <div className='daylies_activities'>\n        \n          <div className=\"units\">\n            <h2>Activité quotidienne</h2>\n            <div className=\"header-elt\">\n              <div className='round_poids'></div>\n              <span>Poids (kg)</span>\n            </div>\n            <div className=\"header-elt\">\n            <div className='round_calorie'></div>\n              <span>Calories brûlées (kCal)</span>\n            </div>\n          </div>\n            <ResponsiveContainer width=\"100%\" height=\"90%\">\n            <BarChart  barSize= {7} barGap={8} barCategoryGap={54} radius={5} data={items.data.sessions} >\n            <CartesianGrid vertical='false' BackGround='#F2F2F2'/>\n            <XAxis/>\n            <YAxis orientation= 'right' dataKey='kilogram'/>\n            <Tooltip />\n            <Bar dataKey=\"calories\" fill=\"#282D30\" radius={[5, 5, 0, 0]}/>\n            <Bar  dataKey=\"kilogram\" fill=\"#E60000\" radius={[5, 5, 0, 0]}/>\n          \n          \n          </BarChart>\n          </ResponsiveContainer>\n        </div>\n    );\n};\n\nexport default DayliesActivity;\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}