{"ast":null,"code":"var _jsxFileName = \"/Users/guillaume/desktop-tutorial/p12_26_07_2021/src/components/DayliesActivity.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Bar, ResponsiveContainer } from \"recharts\";\nimport useFetch from \"./FetchData\";\nimport TooltipsActivity from \"./TooltipsActivity\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DayliesActivity = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [loading, items] = useFetch(`http://localhost:3000/user/${id}/activity`);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lds-dual-ring\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n\n  let kilogramsArray = [];\n  let caloriesArray = [];\n  let minYKilo = 0;\n  let maxYKilo = 0;\n  let minYCal = 0;\n  let maxYCal = 0;\n\n  if (items.data.sessions) {\n    kilogramsArray = items.data.sessions.map(elt => elt.kilogram);\n    minYKilo = Math.min(...kilogramsArray) - 1;\n    maxYKilo = Math.max(...kilogramsArray) + 1;\n    caloriesArray = items.data.sessions.map(elt => elt.calories);\n    minYCal = Math.min(...caloriesArray) - 10;\n    maxYCal = Math.max(...caloriesArray) + 10;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"daylies_activities\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"units\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Activit\\xE9 quotidienne\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-elt\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"round_poids\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Poids (kg)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-elt\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"round_calorie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Calories br\\xFBl\\xE9es (kCal)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"80%\",\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        barSize: 7,\n        barGap: 8,\n        barCategoryGap: 54,\n        radius: 5,\n        data: items.data.sessions,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\",\n          vertical: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          datakey: \"day\",\n          tickLine: false,\n          tick: {\n            fontSize: 14\n          },\n          dy: 15\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          orientation: \"right\",\n          dataKey: \"kilogram\",\n          domain: [minYKilo, maxYKilo]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          yAxisId: \"cal\",\n          hide: true,\n          domain: [minYCal, maxYCal]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          content: /*#__PURE__*/_jsxDEV(TooltipsActivity, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 22\n          }, this),\n          cursor: {\n            fill: \"#e0e0e0\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"calories\",\n          fill: \"#282D30\",\n          radius: [5, 5, 0, 0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"kilogram\",\n          fill: \"#E60000\",\n          radius: [5, 5, 0, 0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DayliesActivity, \"FSm6au8vdmHGNgL7FUQmxe7l8S0=\", false, function () {\n  return [useParams, useFetch];\n});\n\n_c = DayliesActivity;\nexport default DayliesActivity;\n\nvar _c;\n\n$RefreshReg$(_c, \"DayliesActivity\");","map":{"version":3,"sources":["/Users/guillaume/desktop-tutorial/p12_26_07_2021/src/components/DayliesActivity.jsx"],"names":["React","BarChart","CartesianGrid","XAxis","YAxis","Tooltip","Bar","ResponsiveContainer","useFetch","TooltipsActivity","useParams","DayliesActivity","id","loading","items","kilogramsArray","caloriesArray","minYKilo","maxYKilo","minYCal","maxYCal","data","sessions","map","elt","kilogram","Math","min","max","calories","fontSize","fill"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  BarChart,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Bar,\n  ResponsiveContainer,\n} from \"recharts\";\nimport useFetch from \"./FetchData\";\nimport TooltipsActivity from \"./TooltipsActivity\";\nimport { useParams } from \"react-router-dom\";\n\nconst DayliesActivity = () => {\n  const { id } = useParams();\n  const [loading, items] = useFetch(\n    `http://localhost:3000/user/${id}/activity`\n  );\n\n  if (loading) {\n    return <div className=\"lds-dual-ring\"></div>;\n  }\n\n  let kilogramsArray = [];\n  let caloriesArray = [];\n  let minYKilo = 0;\n  let maxYKilo = 0;\n  let minYCal = 0;\n  let maxYCal = 0;\n\n  if (items.data.sessions) {\n    kilogramsArray = items.data.sessions.map((elt) => elt.kilogram);\n    minYKilo = Math.min(...kilogramsArray) - 1;\n    maxYKilo = Math.max(...kilogramsArray) + 1;\n\n    caloriesArray = items.data.sessions.map((elt) => elt.calories);\n    minYCal = Math.min(...caloriesArray) - 10;\n    maxYCal = Math.max(...caloriesArray) + 10;\n  }\n\n  return (\n    <div className=\"daylies_activities\">\n      <div className=\"units\">\n        <h2>Activité quotidienne</h2>\n        <div className=\"header-elt\">\n          <div className=\"round_poids\"></div>\n          <span>Poids (kg)</span>\n        </div>\n        <div className=\"header-elt\">\n          <div className=\"round_calorie\"></div>\n          <span>Calories brûlées (kCal)</span>\n        </div>\n      </div>\n      <ResponsiveContainer width=\"100%\" height=\"80%\">\n        <BarChart\n          barSize={7}\n          barGap={8}\n          barCategoryGap={54}\n          radius={5}\n          data={items.data.sessions}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n          <XAxis\n            datakey=\"day\"\n            tickLine={false}\n            tick={{ fontSize: 14 }}\n            dy={15}\n          />\n          <YAxis\n            orientation=\"right\"\n            dataKey=\"kilogram\"\n            domain={[minYKilo, maxYKilo]}\n          />\n          <YAxis yAxisId=\"cal\" hide={true} domain={[minYCal, maxYCal]} />\n          <Tooltip\n            content={<TooltipsActivity />}\n            cursor={{ fill: \"#e0e0e0\" }}\n          />\n          <Bar dataKey=\"calories\" fill=\"#282D30\" radius={[5, 5, 0, 0]} />\n          <Bar dataKey=\"kilogram\" fill=\"#E60000\" radius={[5, 5, 0, 0]} />\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default DayliesActivity;\n"]},"metadata":{},"sourceType":"module"}