{"ast":null,"code":"var _jsxFileName = \"/Users/guillaume/desktop-tutorial/p12_26_07_2021/src/components/RadialScore.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport useFetch from \"./FetchDating\";\nimport { PieChart, Pie, Label, Cell, ResponsiveContainer } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RadialScore = () => {\n  _s();\n\n  const [loading, dataScore] = useFetch(\"http://localhost:3000/user/12\");\n\n  if (loading) {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this);\n  } //console.log(dataScore.data.todayScore*100)\n  // const data = [{\n  //   score: dataScore.data.todayScore*100 }]\n\n\n  const data = [{\n    score: 12\n  }];\n  return (\n    /*#__PURE__*/\n    // <ResponsiveContainer width=\"100%\" height=\"80%\">\n    _jsxDEV(PieChart, {\n      width: 250,\n      height: 180,\n      children: /*#__PURE__*/_jsxDEV(Pie, {\n        data: data,\n        cx: \"50%\",\n        cy: \"50%\",\n        dataKey: \"value\",\n        innerRadius: 70,\n        outerRadius: 80,\n        children: [data.map((entry, index) => {\n          if (index === 1) {\n            return /*#__PURE__*/_jsxDEV(Cell, {\n              fill: \"#fbfbfb\",\n              \"stroke-linecap\": \"round\"\n            }, `cell-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this);\n          }\n\n          return /*#__PURE__*/_jsxDEV(Cell, {\n            fill: \"#ff0000\"\n          }, `cell-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 18\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Label //   content={<CustomLabelKPI value={data[0] && data[0].value} />}\n        , {\n          position: \"center\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)\n    /* // </ResponsiveContainer> */\n\n  );\n};\n\n_s(RadialScore, \"xL6qg8pwuuY2nFtZykmgDIpK/A8=\", false, function () {\n  return [useFetch];\n});\n\n_c = RadialScore;\nexport default RadialScore;\n\nvar _c;\n\n$RefreshReg$(_c, \"RadialScore\");","map":{"version":3,"sources":["/Users/guillaume/desktop-tutorial/p12_26_07_2021/src/components/RadialScore.jsx"],"names":["React","useFetch","PieChart","Pie","Label","Cell","ResponsiveContainer","RadialScore","loading","dataScore","data","score","map","entry","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,SAASC,QAAT,EAAmBC,GAAnB,EAAwBC,KAAxB,EAA+BC,IAA/B,EAAqCC,mBAArC,QAAgE,UAAhE;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBR,QAAQ,CAAC,+BAAD,CAArC;;AAEA,MAAIO,OAAJ,EAAa;AACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,GALuB,CAOxB;AAEA;AACA;;;AAEA,QAAME,IAAI,GAAG,CACX;AACEC,IAAAA,KAAK,EAAE;AADT,GADW,CAAb;AAMA;AAAA;AACE;AAEA,YAAC,QAAD;AAAU,MAAA,KAAK,EAAE,GAAjB;AAAsB,MAAA,MAAM,EAAE,GAA9B;AAAA,6BACE,QAAC,GAAD;AACE,QAAA,IAAI,EAAED,IADR;AAEE,QAAA,EAAE,EAAC,KAFL;AAGE,QAAA,EAAE,EAAC,KAHL;AAIE,QAAA,OAAO,EAAC,OAJV;AAKE,QAAA,WAAW,EAAE,EALf;AAME,QAAA,WAAW,EAAE,EANf;AAAA,mBAQGA,IAAI,CAACE,GAAL,CAAS,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC1B,cAAIA,KAAK,KAAK,CAAd,EAAiB;AACf,gCACE,QAAC,IAAD;AAEE,cAAA,IAAI,EAAC,SAFP;AAGE,gCAAe;AAHjB,eACQ,QAAOA,KAAM,EADrB;AAAA;AAAA;AAAA;AAAA,oBADF;AAOD;;AACD,8BAAO,QAAC,IAAD;AAA4B,YAAA,IAAI,EAAC;AAAjC,aAAY,QAAOA,KAAM,EAAzB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAXA,CARH,eAoBE,QAAC,KAAD,CACA;AADA;AAEE,UAAA,QAAQ,EAAC;AAFX;AAAA;AAAA;AAAA;AAAA,gBApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AA2BA;;AA9BF;AAgCD,CAlDD;;GAAMP,W;UACyBN,Q;;;KADzBM,W;AAoDN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport useFetch from \"./FetchDating\";\nimport { PieChart, Pie, Label, Cell, ResponsiveContainer } from \"recharts\";\n\nconst RadialScore = () => {\n  const [loading, dataScore] = useFetch(\"http://localhost:3000/user/12\");\n\n  if (loading) {\n    <div>Chargement...</div>;\n  }\n\n  //console.log(dataScore.data.todayScore*100)\n\n  // const data = [{\n  //   score: dataScore.data.todayScore*100 }]\n\n  const data = [\n    {\n      score: 12,\n    },\n  ];\n\n  return (\n    // <ResponsiveContainer width=\"100%\" height=\"80%\">\n    \n    <PieChart width={250} height={180}>\n      <Pie\n        data={data}\n        cx=\"50%\"\n        cy=\"50%\"\n        dataKey=\"value\"\n        innerRadius={70}\n        outerRadius={80}\n      >\n        {data.map((entry, index) => {\n          if (index === 1) {\n            return (\n              <Cell\n                key={`cell-${index}`}\n                fill=\"#fbfbfb\"\n                stroke-linecap=\"round\"\n              />\n            );\n          }\n          return <Cell key={`cell-${index}`} fill=\"#ff0000\" />;\n        })}\n        <Label\n        //   content={<CustomLabelKPI value={data[0] && data[0].value} />}\n          position=\"center\"\n        />\n      </Pie>\n    </PieChart>\n    /* // </ResponsiveContainer> */\n  );\n};\n\nexport default RadialScore;\n"]},"metadata":{},"sourceType":"module"}